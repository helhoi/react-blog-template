{"version":3,"sources":["components/firebase.js","components/Project.js","components/Projects.js","components/ProjectDetails.js","components/Contact.js","components/Cv.js","components/Header.js","components/Login.js","components/Edit.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Project","props","className","onClick","navigate","id","data","defaultImage","src","alt","title","signedIn","to","window","confirm","firestore","collection","doc","delete","then","ref","console","log","catch","error","Projects","useState","projects","setProjects","useEffect","orderBy","onSnapshot","snapshot","docs","add","timestamp","FieldValue","serverTimestamp","length","map","project","key","ProjectDetails","scrollTo","setProject","prev","setPrev","next","setNext","get","array","myPos","indexOf","styles","backgroundImage","backgroundAttachment","backgroundSize","backgroundPosition","paddingTop","paddingBottom","style","backgroundColor","padding","minHeight","year","description","parse","Contact","Cv","href","target","Header","show","setShow","color","size","getProps","isPartiallyCurrent","Login","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","currentUser","displayName","photoURL","signOut","Edit","status","setStatus","snapShot","updateValue","e","persist","type","existingProject","name","checked","value","onSubmit","preventDefault","update","message","onChange","placeholder","byline","htmlFor","defaultChecked","html","javascript","userOrientedDesign","hidden","accept","storageRef","storage","onUploadStart","onUploadError","onUploadSuccess","filename","child","getDownloadURL","url","onProgress","percentage","App","setSignedIn","onAuthStateChanged","user","default","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f9093259.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCa_APZK8ZwmcxaTPV_GSXyYeAOZcpS6is\",\n    authDomain: \"react-blog-firebase-7d030.firebaseapp.com\",\n    databaseURL: \"https://react-blog-firebase-7d030.firebaseio.com\",\n    projectId: \"react-blog-firebase-7d030\",\n    storageBucket: \"react-blog-firebase-7d030.appspot.com\",\n    messagingSenderId: \"238846679561\",\n    appId: \"1:238846679561:web:c9ec46d2ddc1ccfbe2f6d8\",\n    measurementId: \"G-2FFCPS77BK\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase","import React, {useState} from 'react'\nimport './Project.css'\nimport {MdDelete} from \"react-icons/md\"\nimport {FaCode} from \"react-icons/fa\"\nimport firebase from './firebase'\nimport {Link, navigate } from '@reach/router'\n\nconst Project = (props) => {\n\n    const deleteProject = () => {\n        if(window.confirm('sure')){\n            firebase.firestore()\n            .collection('projects')\n            .doc(props.id)\n            .delete()\n            .then( ref => console.log('Document was deleted'))\n            .catch( error => console.log(error))\n        }\n    }\n\n   \n    return(\n        <div className='project'>\n            <div className='bilde' onClick={() => navigate('./projects/' + props.id)}>\n            {\n                props.data.defaultImage && \n                <img src={props.data.defaultImage} alt='cover' />\n            }\n            </div>\n            <div className='project-title'>\n                <div>{props.data.title}</div>\n            </div>\n            {\n                props.signedIn && \n                <div className='admin-icons'>\n                    <Link to={'/edit/' + props.id} >\n                    <FaCode  className='edit-icons'/>\n                    </Link>\n                   \n                    <MdDelete onClick={deleteProject} className='edit-icons'/>\n                                \n        </div>\n}\n</div>\n    )\n}\nexport default Project","import React, { useState, useEffect} from 'react'\nimport firebase from './firebase'\nimport Project from './Project'\nimport './Projects.css'\nimport { IoIosAddCircle } from 'react-icons/io'\nimport {navigate} from '@reach/router'\nimport ClipLoader from \"react-spinners/ClipLoader\"\n\nconst Projects = (props) => {\n    const [projects, setProjects] = useState([])\n\n\n    const addProject = () => {\n        firebase.firestore().collection('projects').add(\n        \n       { title: '0 New project',\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()      \n}\n        )\n        .then( doc => navigate('/edit/' + doc.id))\n    }\n     useEffect( () => {\n        firebase\n        .firestore()\n        .collection('projects')\n        .orderBy('title')\n        .onSnapshot(\n            snapshot => setProjects(snapshot.docs)\n        )\n    }, [])\n\n    return(\n        <main className='projects'>\n           { \n           props.signedIn &&\n            <div className='add'>\n                <IoIosAddCircle className='edit-icons-add' onClick={addProject} />\n            </div>\n}\n\n            {\n                projects.length > 0\n                ?             \n                <div className='projectsContainer'>\n                    {\n                        projects.map(\n                            project => <Project \n                            key={project.id}\n                            data={project.data()}\n                            id={project.id}\n                            signedIn={props.signedIn}/>\n                        )\n                    }\n                </div>\n            :\n            <ClipLoader />\n        }\n        </main>\n        \n    )\n}\n\nexport default Projects","import React, {useState, useEffect} from 'react'\nimport './Project.css'\nimport firebase from './firebase'\nimport {Link } from '@reach/router'\nimport parse from 'html-react-parser'\nimport './ProjectDetails.css'\n\nconst ProjectDetails = (props) => {\n    window.scrollTo(0,0)\n\n    const[project, setProject] = useState()\n    const[prev,setPrev] = useState()\n    const[next,setNext] = useState()\n\n   useEffect( () => {\n            firebase\n            .firestore()\n            .collection('projects')\n            .doc(props.id)\n            .onSnapshot( \n               snapshot => setProject(snapshot.data())\n           )\n        }, [props.id])\n\n        useEffect( () => {\n            firebase\n            .firestore()\n            .collection('projects')\n            .orderBy('title')\n            .get()\n            .then( projects => {\n                const array = projects.docs.map( doc => doc.id)\n                const myPos = array.indexOf(props.id)\n                setNext( myPos + 1 === array.length ? array[0] : array[myPos + 1]) \n                setPrev( myPos === 0 ? array[array.length - 1]  : array[myPos - 1]) \n            })\n           \n        }, [props.id])\n\n        let styles = {}\n\n        if(project){\n            styles = {\n                backgroundImage: 'url(' + project.defaultImage + ')',\n                backgroundAttachment: 'fixed',\n                backgroundSize: 'cover',\n                backgroundPosition: 'center 40%',\n                paddingTop: '100vh',\n                paddingBottom: '0'\n            }\n        } \n    return(\n       <main\n            style={styles} \n            className='project-details'>\n            {\n            project\n            ?\n        <div style={{backgroundColor:'white', padding:'20vh 20vh 0 20vh', minHeight:'100vh'}}>\n            \n            <h4>{project.title}</h4>\n\n            <div className='year'>\n                { project.year}\n            </div>\n\n            <div className='description'>\n                {project.description && parse(project.description )}\n            </div>\n            <div className='pager'>\n                <Link to={'/projects/' + prev}>forrige</Link>\n                <Link to={'/projects/' + next}>neste</Link>\n            </div>\n            \n           </div>\n           :\n           <h2>Fetching projects, hold on</h2>\n        }\n           </main>\n   \n    )\n}\nexport default ProjectDetails","import React from 'react'\n\nconst Contact = () => {\n    return(\n        <main>\n            <h1>Contact</h1>\n        </main>\n        \n    )\n\n}\n\n\nexport default Contact","import React from 'react'\nimport './Cv.css'\n\nconst Cv = () => {\n    return(\n        <main className='about'>\n            <div className='profile-text'>\n                <h1><span>ui/ux</span>designer</h1>\n                <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</p>\n                <p><a href='mailto:helenehoie@gmail.com'>helenehoie@gmail.com</a>+47 928 83 244</p>\n                <a href=\"https://www.linkedin.com/in/helenehoienaesheim/\" target=\"_blank\">linkedin</a>\n            </div>\n            <img src='../images/helene.jpeg' alt='avatar' />\n        </main>\n    )\n}\n\nexport default Cv","import React, {useState} from 'react'\nimport { Link } from '@reach/router'\nimport './Header.css'\nimport {MdMenu} from \"react-icons/md\"\nimport {MdClose} from \"react-icons/md\"\nimport './Header.css'\n\nconst Header = (props) => {\n    const [show,setShow] = useState(false)\n\n    const isPartiallyActive = ({\n        isPartiallyCurrent\n    }) => {\n        return isPartiallyCurrent \n        ? { className : 'active'}\n        : null\n    }\n    \n    return (\n        <div className='header-container'>\n            <div className='burger' onClick={ () => setShow(!show) }>\n                {\n                show \n                ?\n                <MdClose  color ='#8C8987' size='32' />\n                :\n                <MdMenu  color ='#8C8987' size='32' />\n                }\n            </div>\n            <header className={ show ? 'visible' : ''} onClick={ () => setShow(false)}>\n                <Link to='/' className='navn'>helene næsheim</Link>\n                <Link getProps={isPartiallyActive} to='/projects'>arbeider</Link>\n                <Link to='/cv'>om meg</Link>\n                <Link to='/login'>\n            {\n                props.signedIn\n                ? 'profile'\n                : 'login'\n            }   </Link>\n    </header>\n    </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport firebase from './firebase'\nimport './Login.css'\n\nconst Login = (props) => {\n    const loginWithGoogle = () => {\n        let provider = new firebase.auth.GoogleAuthProvider()\n        provider.addScope('profile')\n        provider.addScope('email')\n\n        firebase.auth()\n        .signInWithPopup(provider)\n            .catch( (error) => {\n                console.log(error)\n            } ) \n    }\n\n    const logout = () => {\n        firebase.auth().signOut()\n    }\n    return(\n        <main className='login'>\n            {\n                !props.signedIn && \n                <button onClick={loginWithGoogle}>sign in</button>\n            }\n            {\n                props.signedIn && \n                <>\n                <h1>You are signed in to firebase</h1>\n            <p>Welcome {firebase.auth().currentUser.displayName}</p>\n            {\n                firebase.auth().currentUser.photoURL && \n                <img alt='profile img' src={firebase.auth().currentUser.photoURL}></img>\n            }\n                <button onClick={logout}>sign out</button> \n                </>\n            }\n           \n        </main>\n       \n    )\n}\n\n\nexport default Login","import React, {useState, useEffect} from 'react'\nimport firebase from './firebase'\nimport './Edit.css'\nimport FileUploader from \"react-firebase-file-uploader\"\nimport {Link} from '@reach/router'\n\nconst Edit = (props) => {\n\n    const [project, setProject] = useState({})\n    const [status, setStatus] = useState()\n\n    useEffect( () => {\n        firebase.firestore().collection('projects').doc(props.id)\n        .onSnapshot( snapShot => \n            setProject(snapShot.data())\n             )\n    }, [props.id] )\n\nconst saveProject = (e) => {\n    setStatus('updating project, please hold')\n    e.preventDefault()\n    firebase.firestore().collection('projects').doc(props.id)\n        .update(project)\n        .then( () => setStatus('project updated'))\n        .catch( error => {console.log(error.message)})\n}\n\nconst updateValue = \n    e => {\n    e.persist()\n\nswitch(e.target.type){\n    case 'checkbox': { \n        setProject( \n            existingProject => ({\n            ...existingProject,\n            [e.target.name]: e.target.checked\n        }))\n    break;\n    }\n\n    case 'text' : {\n        setProject( \n            existingProject => ({\n            ...existingProject,\n            [e.target.name]: e.target.value\n        }))\n        break; \n    }\n\n    default: {\n        setProject( \n            existingProject => ({\n            ...existingProject,\n            [e.target.name]: e.target.value\n        }))\n        break;\n    }\n}\n\n    \n}\n\nconst uploadStart = () => {\n    setStatus('Uploading image, please hold')\n}\nconst uploadError = (error) => {\n    setStatus(error)\n}\nconst handleProgress = (percentage) => {\n    console.log(percentage)\n}\nconst uploadSuccess = filename => {\n    firebase\n        .storage()\n        .ref('images')\n        .child(filename)\n        .getDownloadURL()\n        .then(\n            url => setProject( existingProject => ( {\n                ...existingProject,\n                defaultImage: url\n            } ) )\n            )\n            setStatus('image uploaded')\n        \n}\n    return(\n        <main className='edit'>\n            <h1>Edit project: {props.id}</h1>\n            <form onSubmit={saveProject}>\n                <input name='title' type='text' onChange={updateValue} value={project.title}/>\n                <input name='year' onChange={updateValue} placeholder='year' value={project.year}/>\n                <input name='byline' onChange={updateValue} placeholder='short description' value={project.byline}/>\n\n                <div className='checks'>    \n                  <label htmlFor='html'>html</label>\n                  <input name='html' id='html' type='checkbox' onChange={updateValue} defaultChecked={project.html}/>\n\n                  <label htmlFor='javascript'>javascript</label>\n                  <input name='javascript' id='javascript' type='checkbox' onChange={updateValue} defaultChecked={project.javascript}/>\n\n                  <label htmlFor='userOrientedDesign'>user-oriented-design</label>\n                  <input name='userOrientedDesign' id='userOrientedDesign' type='checkbox' onChange={updateValue} defaultChecked={project.userOrientedDesign}/>\n                </div>\n\n                <textarea name='description' onChange={updateValue} value={project.description}/>\n                {\n                project.defaultImage && \n                <img src={project.defaultImage} alt='default'/>\n                }\n\n                <label>\n                 <div className='button'>{project.defaultImage ? 'replace' : 'upload'}</div>\n                <FileUploader\n                hidden\n                accept=\"image/*\"\n                storageRef={firebase.storage().ref('images')}\n                onUploadStart={uploadStart}\n                onUploadError={uploadError}\n                onUploadSuccess={uploadSuccess}\n                onProgress={handleProgress}\n                />\n                </label>\n                <button type='submit'>Save</button>\n            </form>\n            <p>{status}</p>\n            <Link to={'/projects/' + props.id}>view</Link>\n        </main>\n    )\n    }\n\n    export default Edit","import React, { useState, useEffect } from 'react'\nimport { Router, navigate } from '@reach/router'\nimport './App.css'\nimport Projects from './components/Projects'\nimport ProjectDetails from './components/ProjectDetails'\n\nimport Contact from './components/Contact'\nimport Cv from './components/Cv'\nimport Header from './components/Header'\nimport Login from './components/Login'\nimport Edit from './components/Edit'\nimport firebase from  './components/firebase'\n\n\n\nconst App = () => {\n\n\n    const [signedIn, setSignedIn] = useState(false)\n\n  \n    useEffect( () => {\n      firebase.auth().onAuthStateChanged(\n        user => {\n          if(user){\n            setSignedIn(true)\n          }else{\n            setSignedIn(false)\n          }\n          }\n      )\n    })\n\n\n  return(\n   <div>\n    <Header signedIn={signedIn}/>\n     <Router>\n       <Projects default signedIn={signedIn} path='/projects' />\n       <Contact path='/contact' />\n       <ProjectDetails path='/projects/:id'/>\n       <Cv path='/cv' />\n       <Login signedIn={signedIn} setSignedIn={setSignedIn} path='/login' />\n       <Edit path='/edit/:id'/>\n     </Router>\n   </div>\n\n   \n  )\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}