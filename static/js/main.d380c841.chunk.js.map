{"version":3,"sources":["components/firebase.js","components/Project.js","components/Projects.js","components/ProjectDetails.js","components/Contact.js","components/Cv.js","components/Header.js","components/Login.js","components/Edit.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Project","props","className","onClick","navigate","id","data","defaultImage","src","alt","title","signedIn","to","window","confirm","firestore","collection","doc","delete","then","ref","console","log","catch","error","Projects","add","timestamp","FieldValue","serverTimestamp","projects","length","map","project","key","ProjectDetails","scrollTo","textTop","useRef","parallaxHeight","useState","setProject","prev","setPrev","next","setNext","useEffect","onSnapshot","snapshot","orderBy","get","array","docs","myPos","indexOf","styles","backgroundImage","backgroundAttachment","backgroundSize","minHeight","width","position","top","display","alignItems","style","current","getBoundingClientRect","parallaxRect","height","paddingTop","backgroundColor","padding","year","description","parse","Contact","Cv","href","target","Header","show","setShow","color","size","getProps","isPartiallyCurrent","active","document","location","lastIndexOf","Login","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","currentUser","displayName","photoURL","signOut","Edit","status","setStatus","snapShot","updateValue","e","persist","type","existingProject","name","checked","value","onSubmit","preventDefault","update","message","onChange","placeholder","byline","htmlFor","defaultChecked","html","javascript","userOrientedDesign","hidden","accept","storageRef","storage","onUploadStart","onUploadError","onUploadSuccess","filename","child","getDownloadURL","url","onProgress","percentage","App","setSignedIn","setProjects","onAuthStateChanged","user","basepath","process","default","path","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d380c841.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCa_APZK8ZwmcxaTPV_GSXyYeAOZcpS6is\",\n    authDomain: \"react-blog-firebase-7d030.firebaseapp.com\",\n    databaseURL: \"https://react-blog-firebase-7d030.firebaseio.com\",\n    projectId: \"react-blog-firebase-7d030\",\n    storageBucket: \"react-blog-firebase-7d030.appspot.com\",\n    messagingSenderId: \"238846679561\",\n    appId: \"1:238846679561:web:c9ec46d2ddc1ccfbe2f6d8\",\n    measurementId: \"G-2FFCPS77BK\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase","import React, {useState} from 'react'\nimport './Project.css'\nimport {MdDelete} from \"react-icons/md\"\nimport {FaCode} from \"react-icons/fa\"\nimport firebase from './firebase'\nimport {Link, navigate } from '@reach/router'\n\nconst Project = (props) => {\n\n    const deleteProject = () => {\n        if(window.confirm('sure')){\n            firebase.firestore()\n            .collection('projects')\n            .doc(props.id)\n            .delete()\n            .then( ref => console.log('Document was deleted'))\n            .catch( error => console.log(error))\n        }\n    }\n\n   \n    return(\n        <div className='project'>\n            <div className='bilde' onClick={() => navigate(process.env.PUBLIC_URL + '/projects/' + props.id)}>\n            {\n                props.data.defaultImage && \n                <img src={props.data.defaultImage} alt='cover' />\n            }\n            </div>\n            <div className='project-title'>\n                <div>{props.data.title}</div>\n            </div>\n            {\n                props.signedIn && \n                <div className='admin-icons'>\n                    <Link to={process.env.PUBLIC_URL +  '/edit/' + props.id} >\n                        <FaCode  className='edit-icons'/>\n                    </Link>\n                   \n                    <MdDelete onClick={deleteProject} className='edit-icons'/>\n                                \n        </div>\n}\n</div>\n    )\n}\nexport default Project","import React, { useState, useEffect} from 'react'\nimport firebase from './firebase'\nimport Project from './Project'\nimport './Projects.css'\nimport { IoIosAddCircle } from 'react-icons/io'\nimport {navigate} from '@reach/router'\nimport ClipLoader from \"react-spinners/ClipLoader\"\n\nconst Projects = (props) => {\n    \n\n\n    const addProject = () => {\n        firebase.firestore().collection('projects').add(\n        \n       { title: '0 New project',\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()      \n}\n        )\n        .then( doc => navigate(process.env.PUBLIC_URL + '/edit/' + doc.id))\n    }\n     \n\n    return(\n        <main className='projects'>\n           { \n           props.signedIn &&\n            <div className='add'>\n                <IoIosAddCircle className='edit-icons-add' onClick={addProject} />\n            </div>\n}\n\n            {\n                props.projects.length > 0\n                ?             \n                <div className='projectsContainer'>\n                    {\n                        props.projects.map(\n                            project => <Project \n                            key={project.id}\n                            data={project.data()}\n                            id={project.id}\n                            signedIn={props.signedIn}/>\n                        )\n                    }\n                </div>\n            :\n            <ClipLoader />\n        }\n        </main>\n        \n    )\n}\n\nexport default Projects","import React, {useState, useEffect, useRef} from 'react'\nimport './Project.css'\nimport firebase from './firebase'\nimport {Link } from '@reach/router'\nimport parse from 'html-react-parser'\nimport './ProjectDetails.css'\nimport {IoIosArrowDown, IoIosGrid} from \"react-icons/io\"\n\n\nconst ProjectDetails = (props) => {\n    window.scrollTo(0,0)\n\n    let textTop = useRef()\n    let parallaxHeight = useRef()\n\n    const[project, setProject] = useState()\n    const[prev,setPrev] = useState()\n    const[next,setNext] = useState()\n\n   useEffect( () => {\n            firebase\n            .firestore()\n            .collection('projects')\n            .doc(props.id)\n            .onSnapshot( \n               snapshot => setProject(snapshot.data())\n           )\n        }, [props.id])\n\n        useEffect( () => {\n            firebase\n            .firestore()\n            .collection('projects')\n            .orderBy('title')\n            .get()\n            .then( projects => {\n                const array = projects.docs.map( doc => doc.id)\n                const myPos = array.indexOf(props.id)\n                setNext( myPos + 1 === array.length ? array[0] : array[myPos + 1]) \n                setPrev( myPos === 0 ? array[array.length - 1]  : array[myPos - 1]) \n            })\n           \n        }, [props.id])\n\n        let styles = {}\n\n        if(project){\n            styles = {\n                backgroundImage: 'url(' + project.defaultImage + ')',\n                backgroundAttachment: 'fixed',\n                backgroundSize: 'cover',\n                minHeight: '100vh',\n                width: '100vw',\n                position:'relative',\n                top:0,\n                display:'grid',\n                alignItems:'end'\n            }\n        } \n        const hitTop = () => {\n            let textRect = textTop.current.getBoundingClientRect()\n            let parallaxRect = parallaxHeight.current.getBoundingClientRect()\n            console.log(parallaxRect.height)\n            window.scrollTo(0, (parallaxRect.height))\n        }\n    return(\n       <main className='project-details'>\n           <div ref={parallaxHeight} className='parallax' style={styles}>\n                <IoIosArrowDown onClick={ hitTop} className='arrow-down'/>\n           </div>\n            {\n            project\n            ?\n        <div style={{paddingTop:'100vh',backgroundColor:'white', padding:'20vh 20vh 0 20vh', minHeight:'100vh'}}>\n            \n            <h4 ref={textTop}>{project.title}</h4>\n\n            <div className='year'>\n                { project.year}\n            </div>\n\n            <div className='description'>\n                {project.description && parse(project.description )}\n            </div>\n            <div className='pager'>\n                <Link to={process.env.PUBLIC_URL +  '/projects/' + prev}>forrige</Link>\n                <Link to={process.env.PUBLIC_URL +  '/projects/' + next}>neste</Link>\n            </div>\n            \n           </div>\n           :\n           <h2>Henter prosjekter - vennligst vent</h2>\n        }\n           </main>\n   \n    )\n}\nexport default ProjectDetails","import React from 'react'\n\nconst Contact = () => {\n    return(\n        <main>\n            <h1>Contact</h1>\n        </main>\n        \n    )\n\n}\n\n\nexport default Contact","import React from 'react'\nimport './Cv.css'\n\nconst Cv = () => {\n    return(\n        <main className='about'>\n            <div className='profile-text'>\n                <h1><span>UI/UX</span>designer</h1>\n                <p>UI/UX designer som elsker å utforme det visuelle grensesnittet. Jeg elsker å jobbe med hele designprosessen fra start til slutt. </p>\n\n                <p className='space-between'>Du kan kontakte meg på <a href='mailto:helenehoie@gmail.com'>helenehoie@gmail.com</a> eller så finner du meg også på <a href=\"https://www.linkedin.com/in/helenehoienaesheim/\" target=\"_blank\">linkedin</a></p>\n            </div>\n            <img src={process.env.PUBLIC_URL + '/images/heleneserine.jpg'} alt='avatar' />\n        </main>\n    )\n}\n\nexport default Cv","import React, {useState} from 'react'\nimport { Link } from '@reach/router'\nimport './Header.css'\nimport {MdMenu} from \"react-icons/md\"\nimport {MdClose} from \"react-icons/md\"\nimport './Header.css'\n\nconst Header = (props) => {\n    const [show,setShow] = useState(false)\n\n    const isPartiallyActive = ({\n        isPartiallyCurrent\n    }) => {\n        let active = (document.location.href.lastIndexOf('/')) === (document.location.href.length - 1) ? 'active':''\n        return isPartiallyCurrent || active \n        ? { className : 'active'}\n        : null\n    }\n    \n    return (\n        <div className='header-container'>\n            <div className='burger' onClick={ () => setShow(!show) }>\n                {\n                show \n                ?\n                <MdClose  color ='#8C8987' size='32' />\n                :\n                <MdMenu  color ='#8C8987' size='32' />\n                }\n            </div>\n            <header className={ show ? 'visible' : ''} onClick={ () => setShow(false)}>\n                <a href={process.env.PUBLIC_URL + '/'} className='navn'>helene næsheim</a>\n                <Link to={process.env.PUBLIC_URL + '/projects'} getProps={isPartiallyActive}>arbeider</Link>\n                <Link to={process.env.PUBLIC_URL + '/cv'}>om meg</Link>    \n    </header>\n    </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport firebase from './firebase'\nimport './Login.css'\n\nconst Login = (props) => {\n    const loginWithGoogle = () => {\n        let provider = new firebase.auth.GoogleAuthProvider()\n        provider.addScope('profile')\n        provider.addScope('email')\n\n        firebase.auth()\n        .signInWithPopup(provider)\n            .catch( (error) => {\n                console.log(error)\n            } ) \n    }\n\n    const logout = () => {\n        firebase.auth().signOut()\n    }\n    return(\n        <main className='login'>\n            {\n                !props.signedIn && \n                <button onClick={loginWithGoogle}>sign in</button>\n            }\n            {\n                props.signedIn && \n                <>\n                <h1>You are signed in to firebase</h1>\n            <p>Welcome {firebase.auth().currentUser.displayName}</p>\n            {\n                firebase.auth().currentUser.photoURL && \n                <img alt='profile img' src={firebase.auth().currentUser.photoURL}></img>\n            }\n                <button onClick={logout}>sign out</button> \n                </>\n            }\n           \n        </main>\n       \n    )\n}\n\n\nexport default Login","import React, {useState, useEffect} from 'react'\nimport firebase from './firebase'\nimport './Edit.css'\nimport FileUploader from \"react-firebase-file-uploader\"\nimport {Link} from '@reach/router'\n\nconst Edit = (props) => {\n\n    const [project, setProject] = useState({})\n    const [status, setStatus] = useState()\n\n    useEffect( () => {\n        firebase.firestore().collection('projects').doc(props.id)\n        .onSnapshot( snapShot => \n            setProject(snapShot.data())\n             )\n    }, [props.id] )\n\nconst saveProject = (e) => {\n    setStatus('oppdaterer prosjektet, vennligst vent')\n    e.preventDefault()\n    firebase.firestore().collection('projects').doc(props.id)\n        .update(project)\n        .then( () => setStatus('prosjektet er oppdatert'))\n        .catch( error => {console.log(error.message)})\n}\n\nconst updateValue = \n    e => {\n    e.persist()\n\nswitch(e.target.type){\n    case 'checkbox': { \n        setProject( \n            existingProject => ({\n            ...existingProject,\n            [e.target.name]: e.target.checked\n        }))\n    break;\n    }\n\n    case 'text' : {\n        setProject( \n            existingProject => ({\n            ...existingProject,\n            [e.target.name]: e.target.value\n        }))\n        break; \n    }\n\n    default: {\n        setProject( \n            existingProject => ({\n            ...existingProject,\n            [e.target.name]: e.target.value\n        }))\n        break;\n    }\n}\n\n    \n}\n\nconst uploadStart = () => {\n    setStatus('Uploading image, please hold')\n}\nconst uploadError = (error) => {\n    setStatus(error)\n}\nconst handleProgress = (percentage) => {\n    console.log(percentage)\n}\nconst uploadSuccess = filename => {\n    firebase\n        .storage()\n        .ref('images')\n        .child(filename)\n        .getDownloadURL()\n        .then(\n            url => setProject( existingProject => ( {\n                ...existingProject,\n                defaultImage: url\n            } ) )\n            )\n            setStatus('image uploaded')\n        \n}\n    return(\n        <main className='edit'>\n            <h1>Edit project: {props.id}</h1>\n            <form onSubmit={saveProject}>\n                <input name='title' type='text' onChange={updateValue} value={project.title}/>\n                <input name='year' onChange={updateValue} placeholder='year' value={project.year}/>\n                <input name='byline' onChange={updateValue} placeholder='short description' value={project.byline}/>\n\n                <div className='checks'>    \n                  <label htmlFor='html'>html</label>\n                  <input name='html' id='html' type='checkbox' onChange={updateValue} defaultChecked={project.html}/>\n\n                  <label htmlFor='javascript'>javascript</label>\n                  <input name='javascript' id='javascript' type='checkbox' onChange={updateValue} defaultChecked={project.javascript}/>\n\n                  <label htmlFor='userOrientedDesign'>user-oriented-design</label>\n                  <input name='userOrientedDesign' id='userOrientedDesign' type='checkbox' onChange={updateValue} defaultChecked={project.userOrientedDesign}/>\n                </div>\n\n                <textarea name='description' onChange={updateValue} value={project.description}/>\n                {\n                project.defaultImage && \n                <img src={project.defaultImage} alt='default'/>\n                }\n\n                <label>\n                 <div className='button'>{project.defaultImage ? 'replace' : 'upload'}</div>\n                <FileUploader\n                hidden\n                accept=\"image/*\"\n                storageRef={firebase.storage().ref('images')}\n                onUploadStart={uploadStart}\n                onUploadError={uploadError}\n                onUploadSuccess={uploadSuccess}\n                onProgress={handleProgress}\n                />\n                </label>\n                <button type='submit'>Lagre</button>\n            </form>\n            <p>{status}</p>\n            <Link to={process.env.PUBLIC_URL + '/projects/' + props.id}>vis</Link>\n        </main>\n    )\n    }\n\n    export default Edit","import React, { useState, useEffect } from 'react'\nimport { Router, navigate } from '@reach/router'\nimport './App.css'\nimport Projects from './components/Projects'\nimport ProjectDetails from './components/ProjectDetails'\n\nimport Contact from './components/Contact'\nimport Cv from './components/Cv'\nimport Header from './components/Header'\nimport Login from './components/Login'\nimport Edit from './components/Edit'\nimport firebase from  './components/firebase'\n\n\nconst Default = () => {\n  navigate(process.env.PUBLIC_URL + '/projects')\n  return <></>\n}\n\nconst App = () => {\n\n\n    const [signedIn, setSignedIn] = useState(false)\n    const [projects, setProjects] = useState([])\n\n    useEffect( () => {\n      firebase\n      .firestore()\n      .collection('projects')\n      .orderBy('title')\n      .onSnapshot(\n          snapshot => setProjects(snapshot.docs)\n      )\n  }, [])\n\n  \n    useEffect( () => {\n      firebase.auth().onAuthStateChanged(\n        user => {\n          if(user){\n            setSignedIn(true)\n          }else{\n            setSignedIn(false)\n          }\n          }\n      )\n    })\n\n\n  return(\n   <div>\n    <Header signedIn={signedIn}/>\n     <Router basepath={process.env.PUBLIC_URL}>\n       <Projects projects={projects} default signedIn={signedIn} path='/projects' />\n       <Contact path='/contact' />\n       <ProjectDetails path='/projects/:id'/>\n       <Cv path='/cv' />\n       <Login signedIn={signedIn} setSignedIn={setSignedIn} path='/login' />\n       <Edit path='/edit/:id'/>\n     </Router>\n   </div>\n\n  )\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}